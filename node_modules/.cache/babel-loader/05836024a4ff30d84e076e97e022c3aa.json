{"ast":null,"code":"var _jsxFileName = \"D:\\\\Star Wars\\\\front-end\\\\src\\\\components\\\\SingleEntityPage\\\\SingleEntityPageContainer.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport SingleEntityPage from './SingleEntityPage';\nimport { getId, getEntity } from '../../functions';\nimport { Link } from 'react-router-dom';\nimport fieldsToDisplay from '../../fields_to_display';\nimport ErrorPage from '../ErrorPage/ErrorPage';\n\nclass SingleEntityPageContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getLinks = arr => {\n      const {\n        data\n      } = this.props;\n      return arr.map(elem => {\n        let entity = getEntity(elem);\n        let id = getId(elem);\n        let obj = data[entity].find(elem => getId(elem.url) === id);\n\n        if (obj.title !== undefined) {\n          return React.createElement(Link, {\n            className: \"single-entity__link\",\n            key: obj.url + Math.random(),\n            to: `/${entity}/${id}`,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 24\n            },\n            __self: this\n          }, obj.title);\n        } else {\n          return React.createElement(Link, {\n            className: \"single-entity__link\",\n            key: obj.url + Math.random(),\n            to: `/${entity}/${id}`,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28\n            },\n            __self: this\n          }, obj.name);\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0);\n  }\n\n  componentDidUpdate() {\n    window.scrollTo(0, 0);\n  }\n\n  render() {\n    const {\n      data\n    } = this.props;\n    const {\n      entity,\n      id\n    } = this.props.match.params;\n    let currentEntity = null;\n\n    if (data[entity] !== undefined) {\n      currentEntity = data[entity].find(elem => getId(elem.url) === id);\n    }\n\n    return React.createElement(React.Fragment, null, currentEntity && React.createElement(SingleEntityPage, {\n      fieldsToRender: fieldsToDisplay[entity],\n      getLinks: this.getLinks,\n      entity: data[entity].find(elem => getId(elem.url) === id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), (currentEntity === undefined || currentEntity === null) && React.createElement(ErrorPage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default connect(state => ({\n  data: state.data\n}))(SingleEntityPageContainer);","map":{"version":3,"sources":["D:/Star Wars/front-end/src/components/SingleEntityPage/SingleEntityPageContainer.js"],"names":["React","Component","connect","SingleEntityPage","getId","getEntity","Link","fieldsToDisplay","ErrorPage","SingleEntityPageContainer","getLinks","arr","data","props","map","elem","entity","id","obj","find","url","title","undefined","Math","random","name","componentDidMount","window","scrollTo","componentDidUpdate","render","match","params","currentEntity","state"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport SingleEntityPage from './SingleEntityPage'\r\nimport { getId, getEntity } from '../../functions'\r\nimport { Link } from 'react-router-dom'\r\nimport fieldsToDisplay from '../../fields_to_display'\r\nimport ErrorPage from '../ErrorPage/ErrorPage';\r\n\r\nclass SingleEntityPageContainer extends Component {\r\n    componentDidMount() {\r\n        window.scrollTo(0, 0);\r\n    }\r\n    componentDidUpdate() {\r\n        window.scrollTo(0, 0);\r\n    }\r\n    getLinks = (arr) => {\r\n        const { data } = this.props;\r\n        return arr.map(elem => {\r\n            let entity = getEntity(elem);\r\n            let id = getId(elem);\r\n            let obj = data[entity].find(elem => getId(elem.url) === id);\r\n            if (obj.title !== undefined) {\r\n                return (\r\n                    <Link className=\"single-entity__link\" key={obj.url + Math.random()} to={`/${entity}/${id}`}>{obj.title}</Link>\r\n                )\r\n            } else {\r\n                return (\r\n                    <Link className=\"single-entity__link\" key={obj.url + Math.random()} to={`/${entity}/${id}`}>{obj.name}</Link>\r\n                )\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        const { data } = this.props;\r\n        const { entity, id } = this.props.match.params;\r\n        let currentEntity = null;\r\n        if (data[entity] !== undefined) {\r\n            currentEntity = data[entity].find(elem => getId(elem.url) === id);\r\n        }\r\n        return (\r\n            <>\r\n                {\r\n                    currentEntity && <SingleEntityPage\r\n                        fieldsToRender={fieldsToDisplay[entity]}\r\n                        getLinks={this.getLinks}\r\n                        entity={data[entity].find(elem => getId(elem.url) === id)}\r\n                    />\r\n                }\r\n                {\r\n                    ((currentEntity === undefined) || (currentEntity === null)) && <ErrorPage />\r\n                }\r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default connect(state => ({\r\n    data: state.data,\r\n}))(SingleEntityPageContainer);\r\n"]},"metadata":{},"sourceType":"module"}