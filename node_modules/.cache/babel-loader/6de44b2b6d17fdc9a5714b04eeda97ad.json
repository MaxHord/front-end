{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\Star Wars\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\Star Wars\\\\front-end\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import{LOAD_DATA}from'../constants';export var loadData=function loadData(){return(/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var entities,people,films,vehicles,planets,starships,species,_i,_entities,entity,isNotLastPage,pageNum,response,data,results;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:entities=['people','films','vehicles','planets','starships','species'];people=[];films=[];vehicles=[];planets=[];starships=[];species=[];_i=0,_entities=entities;case 8:if(!(_i<_entities.length)){_context.next=41;break;}entity=_entities[_i];isNotLastPage=true;pageNum=1;case 12:_context.next=14;return fetch(\"https://swapi.dev/api/\".concat(entity,\"/?page=\").concat(pageNum));case 14:response=_context.sent;_context.next=17;return response.json();case 17:data=_context.sent;results=data.results;_context.t0=entity;_context.next=_context.t0==='films'?22:_context.t0==='people'?24:_context.t0==='vehicles'?26:_context.t0==='planets'?28:_context.t0==='starships'?30:_context.t0==='species'?32:34;break;case 22:films=films.concat(results);return _context.abrupt(\"break\",35);case 24:people=people.concat(results);return _context.abrupt(\"break\",35);case 26:vehicles=vehicles.concat(results);return _context.abrupt(\"break\",35);case 28:planets=planets.concat(results);return _context.abrupt(\"break\",35);case 30:starships=starships.concat(results);return _context.abrupt(\"break\",35);case 32:species=species.concat(results);return _context.abrupt(\"break\",35);case 34:return _context.abrupt(\"break\",35);case 35:if(data.next===null){isNotLastPage=false;}pageNum++;case 37:if(isNotLastPage){_context.next=12;break;}case 38:_i++;_context.next=8;break;case 41:dispatch({type:LOAD_DATA,payload:{people:people,films:films,vehicles:vehicles,planets:planets,starships:starships,species:species}});case 42:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());};","map":{"version":3,"sources":["D:/Star Wars/front-end/src/store/actions/dataActionCreator.js"],"names":["LOAD_DATA","loadData","dispatch","entities","people","films","vehicles","planets","starships","species","entity","isNotLastPage","pageNum","fetch","response","json","data","results","concat","next","type","payload"],"mappings":"yNAAA,OAASA,SAAT,KAA0B,cAA1B,CAGA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,mGAAM,iBAAMC,QAAN,+OACpBC,QADoB,CACT,CAAC,QAAD,CAAW,OAAX,CAAoB,UAApB,CAAgC,SAAhC,CAA2C,WAA3C,CAAwD,SAAxD,CADS,CAEtBC,MAFsB,CAEb,EAFa,CAGtBC,KAHsB,CAGd,EAHc,CAItBC,QAJsB,CAIX,EAJW,CAKtBC,OALsB,CAKZ,EALY,CAMtBC,SANsB,CAMV,EANU,CAOtBC,OAPsB,CAOZ,EAPY,gBAQPN,QARO,2DAQjBO,MARiB,eASlBC,aATkB,CASF,IATE,CAUlBC,OAVkB,CAUR,CAVQ,gCAYGC,CAAAA,KAAK,iCAA0BH,MAA1B,mBAA0CE,OAA1C,EAZR,SAYdE,QAZc,sCAaDA,CAAAA,QAAQ,CAACC,IAAT,EAbC,SAadC,IAbc,eAcdC,OAdc,CAcJD,IAAI,CAACC,OAdD,aAeVP,MAfU,6BAgBT,OAhBS,kBAmBT,QAnBS,kBAsBT,UAtBS,kBAyBT,SAzBS,kBA4BT,WA5BS,kBA+BT,SA/BS,qBAiBVL,KAAK,CAAGA,KAAK,CAACa,MAAN,CAAaD,OAAb,CAAR,CAjBU,2CAoBVb,MAAM,CAAGA,MAAM,CAACc,MAAP,CAAcD,OAAd,CAAT,CApBU,2CAuBVX,QAAQ,CAAGA,QAAQ,CAACY,MAAT,CAAgBD,OAAhB,CAAX,CAvBU,2CA0BVV,OAAO,CAAGA,OAAO,CAACW,MAAR,CAAeD,OAAf,CAAV,CA1BU,2CA6BVT,SAAS,CAAGA,SAAS,CAACU,MAAV,CAAiBD,OAAjB,CAAZ,CA7BU,2CAgCVR,OAAO,CAAGA,OAAO,CAACS,MAAR,CAAeD,OAAf,CAAV,CAhCU,sFAqClB,GAAID,IAAI,CAACG,IAAL,GAAc,IAAlB,CAAwB,CACpBR,aAAa,CAAG,KAAhB,CACH,CACDC,OAAO,GAxCW,WA0CbD,aA1Ca,qEA4C1BT,QAAQ,CAAC,CACLkB,IAAI,CAAEpB,SADD,CAELqB,OAAO,CAAE,CACLjB,MAAM,CAANA,MADK,CAELC,KAAK,CAALA,KAFK,CAGLC,QAAQ,CAARA,QAHK,CAILC,OAAO,CAAPA,OAJK,CAKLC,SAAS,CAATA,SALK,CAMLC,OAAO,CAAPA,OANK,CAFJ,CAAD,CAAR,CA5C0B,uDAAN,iEAAjB","sourcesContent":["import { LOAD_DATA } from '../constants';\r\n\r\n\r\nexport const loadData = () => async dispatch => {\r\n    const entities = ['people', 'films', 'vehicles', 'planets', 'starships', 'species'];\r\n    let people = [];\r\n    let films = [];\r\n    let vehicles = [];\r\n    let planets = [];\r\n    let starships = [];\r\n    let species = [];\r\n    for (let entity of entities) {\r\n        let isNotLastPage = true;\r\n        let pageNum = 1;\r\n        do {\r\n            let response = await fetch(`https://swapi.dev/api/${entity}/?page=${pageNum}`);\r\n            let data = await response.json()\r\n            let results = data.results\r\n            switch (entity) {\r\n                case 'films':\r\n                    films = films.concat(results)\r\n                    break;\r\n                case 'people':\r\n                    people = people.concat(results)\r\n                    break;\r\n                case 'vehicles':\r\n                    vehicles = vehicles.concat(results)\r\n                    break;\r\n                case 'planets':\r\n                    planets = planets.concat(results)\r\n                    break;\r\n                case 'starships':\r\n                    starships = starships.concat(results)\r\n                    break;\r\n                case 'species':\r\n                    species = species.concat(results)\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            if (data.next === null) {\r\n                isNotLastPage = false;\r\n            }\r\n            pageNum++;\r\n\r\n        } while (isNotLastPage)\r\n    }\r\n    dispatch({\r\n        type: LOAD_DATA,\r\n        payload: {\r\n            people,\r\n            films,\r\n            vehicles,\r\n            planets,\r\n            starships,\r\n            species,\r\n        }\r\n    })\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}